name: Code Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [develop]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  snyk_scan:
    name: Snyk Scan
    runs-on: ubuntu-latest
    
    outputs:
      critical_found: ${{ steps.check.outputs.critical_found }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Snyk CLI
        run: |
          curl -sL https://snyk.io/install | bash
          echo "$HOME/.snyk" >> $GITHUB_PATH

      - name: Auth with Snyk
        run: snyk auth "${{ secrets.SNYK_TOKEN }}"

      - name: Run Snyk Code scan
        continue-on-error: true
        run: snyk code test --org="${{ secrets.SNYK_ORG }}" --sarif-file-output=snyk-results.sarif

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-results.sarif

      - name: Check for critical findings
        id: check
        run: |
          alerts=$(gh api "/repos/${{ github.repository }}/code-scanning/alerts" --paginate --jq '.[] | select(.rule.severity=="critical")')
          if [[ -n "$alerts" ]]; then
            echo "critical_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "critical_found=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Save scan result
        run: echo "${{ steps.check.outputs.critical_found }}" > result.txt

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: scan-result
          path: result.txt
