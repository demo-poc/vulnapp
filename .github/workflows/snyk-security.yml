name: Code Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [develop]

permissions:
  security-events: write
  actions: read
  id-token: write
  contents: write 
  attestations: write

jobs:
  snyk_scan:
    name: Snyk Scan
    runs-on: ubuntu-latest
    
    outputs:
      critical_found: ${{ steps.check.outputs.critical_found }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Snyk CLI
        run: |
          curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x ./snyk
          mv ./snyk /usr/local/bin/ 

      - name: Auth with Snyk
        run: snyk auth "${{ secrets.SNYK_TOKEN }}"

      - name: Run Snyk Code scan
        continue-on-error: true
        run: snyk code test --report --org="${{ secrets.SNYK_ORG }}" --sarif-file-output=snyk-results.sarif

      - name: Run Snyk Dependency scan
        continue-on-error: true
        run: snyk test --report --org="${{ secrets.SNYK_ORG }}" 

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-results.sarif

      - name: Check for critical findings
        id: check
        run: |
          alerts=$(gh api "/repos/${{ github.repository }}/code-scanning/alerts" --paginate --jq '.[] | select(.rule.severity=="critical")')
          if [[ -n "$alerts" ]]; then
            echo "critical_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "critical_found=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Check if critical findings were found
        id: gate
        run: |
          if [[ "$critical_found" == "true" ]]; then
            echo "Critical issues found. Skipping attestation."
            exit 1
          fi

      - name: Build JAR
        run: mvn clean package --no-transfer-progress
    
      - name: Find built artifact
        id: locate-artifact
        run: |
          ARTIFACT=$(find target -type f -name "*.war" | head -n 1)
          echo "artifact_path=$ARTIFACT" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ${{ steps.locate-artifact.outputs.artifact_path }}

      - name: Generate SLSA Provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ steps.locate-artifact.outputs.artifact_path }}
